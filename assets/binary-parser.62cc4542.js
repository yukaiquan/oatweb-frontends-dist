class v{constructor(e,t){this.code="",this.scopes=[["vars"]],this.bitFields=[],this.tmpVariableCount=0,this.references=new Map,this.imports=[],this.reverseImports=new Map,this.useContextVariables=!1,this.importPath=e,this.useContextVariables=t}generateVariable(e){const t=[...this.scopes[this.scopes.length-1]];return e&&t.push(e),t.join(".")}generateOption(e){switch(typeof e){case"number":return e.toString();case"string":return this.generateVariable(e);case"function":return`${this.addImport(e)}.call(${this.generateVariable()}, vars)`}}generateError(e){this.pushCode(`throw new Error(${e});`)}generateTmpVariable(){return"$tmp"+this.tmpVariableCount++}pushCode(e){this.code+=e+`
`}pushPath(e){e&&this.scopes[this.scopes.length-1].push(e)}popPath(e){e&&this.scopes[this.scopes.length-1].pop()}pushScope(e){this.scopes.push([e])}popScope(){this.scopes.pop()}addImport(e){if(!this.importPath)return`(${e})`;let t=this.reverseImports.get(e);return t||(t=this.imports.push(e)-1,this.reverseImports.set(e,t)),`${this.importPath}[${t}]`}addReference(e){this.references.has(e)||this.references.set(e,{resolved:!1,requested:!1})}markResolved(e){const t=this.references.get(e);t&&(t.resolved=!0)}markRequested(e){e.forEach(t=>{const s=this.references.get(t);s&&(s.requested=!0)})}getUnresolvedReferences(){return Array.from(this.references).filter(([e,t])=>!t.resolved&&!t.requested).map(([e,t])=>e)}}const d=new Map,$="___parser_",l={uint8:1,uint16le:2,uint16be:2,uint32le:4,uint32be:4,int8:1,int16le:2,int16be:2,int32le:4,int32be:4,int64be:8,int64le:8,uint64be:8,uint64le:8,floatle:4,floatbe:4,doublele:8,doublebe:8},C={uint8:"Uint8",uint16le:"Uint16",uint16be:"Uint16",uint32le:"Uint32",uint32be:"Uint32",int8:"Int8",int16le:"Int16",int16be:"Int16",int32le:"Int32",int32be:"Int32",int64be:"BigInt64",int64le:"BigInt64",uint64be:"BigUint64",uint64le:"BigUint64",floatle:"Float32",floatbe:"Float32",doublele:"Float64",doublebe:"Float64"},m={uint8:!1,uint16le:!0,uint16be:!1,uint32le:!0,uint32be:!1,int8:!1,int16le:!0,int16be:!1,int32le:!0,int32be:!1,int64be:!1,int64le:!0,uint64be:!1,uint64le:!0,floatle:!0,floatbe:!1,doublele:!0,doublebe:!1};class b{constructor(){this.varName="",this.type="",this.options={},this.endian="be",this.useContextVariables=!1}static start(){return new b}primitiveGenerateN(e,t){const s=C[e],i=m[e];t.pushCode(`${t.generateVariable(this.varName)} = dataView.get${s}(offset, ${i});`),t.pushCode(`offset += ${l[e]};`)}primitiveN(e,t,s){return this.setNextParser(e,t,s)}useThisEndian(e){return e+this.endian.toLowerCase()}uint8(e,t={}){return this.primitiveN("uint8",e,t)}uint16(e,t={}){return this.primitiveN(this.useThisEndian("uint16"),e,t)}uint16le(e,t={}){return this.primitiveN("uint16le",e,t)}uint16be(e,t={}){return this.primitiveN("uint16be",e,t)}uint32(e,t={}){return this.primitiveN(this.useThisEndian("uint32"),e,t)}uint32le(e,t={}){return this.primitiveN("uint32le",e,t)}uint32be(e,t={}){return this.primitiveN("uint32be",e,t)}int8(e,t={}){return this.primitiveN("int8",e,t)}int16(e,t={}){return this.primitiveN(this.useThisEndian("int16"),e,t)}int16le(e,t={}){return this.primitiveN("int16le",e,t)}int16be(e,t={}){return this.primitiveN("int16be",e,t)}int32(e,t={}){return this.primitiveN(this.useThisEndian("int32"),e,t)}int32le(e,t={}){return this.primitiveN("int32le",e,t)}int32be(e,t={}){return this.primitiveN("int32be",e,t)}bigIntVersionCheck(){if(!DataView.prototype.getBigInt64)throw new Error("BigInt64 is unsupported on this runtime")}int64(e,t={}){return this.bigIntVersionCheck(),this.primitiveN(this.useThisEndian("int64"),e,t)}int64be(e,t={}){return this.bigIntVersionCheck(),this.primitiveN("int64be",e,t)}int64le(e,t={}){return this.bigIntVersionCheck(),this.primitiveN("int64le",e,t)}uint64(e,t={}){return this.bigIntVersionCheck(),this.primitiveN(this.useThisEndian("uint64"),e,t)}uint64be(e,t={}){return this.bigIntVersionCheck(),this.primitiveN("uint64be",e,t)}uint64le(e,t={}){return this.bigIntVersionCheck(),this.primitiveN("uint64le",e,t)}floatle(e,t={}){return this.primitiveN("floatle",e,t)}floatbe(e,t={}){return this.primitiveN("floatbe",e,t)}doublele(e,t={}){return this.primitiveN("doublele",e,t)}doublebe(e,t={}){return this.primitiveN("doublebe",e,t)}bitN(e,t,s){return s.length=e,this.setNextParser("bit",t,s)}bit1(e,t={}){return this.bitN(1,e,t)}bit2(e,t={}){return this.bitN(2,e,t)}bit3(e,t={}){return this.bitN(3,e,t)}bit4(e,t={}){return this.bitN(4,e,t)}bit5(e,t={}){return this.bitN(5,e,t)}bit6(e,t={}){return this.bitN(6,e,t)}bit7(e,t={}){return this.bitN(7,e,t)}bit8(e,t={}){return this.bitN(8,e,t)}bit9(e,t={}){return this.bitN(9,e,t)}bit10(e,t={}){return this.bitN(10,e,t)}bit11(e,t={}){return this.bitN(11,e,t)}bit12(e,t={}){return this.bitN(12,e,t)}bit13(e,t={}){return this.bitN(13,e,t)}bit14(e,t={}){return this.bitN(14,e,t)}bit15(e,t={}){return this.bitN(15,e,t)}bit16(e,t={}){return this.bitN(16,e,t)}bit17(e,t={}){return this.bitN(17,e,t)}bit18(e,t={}){return this.bitN(18,e,t)}bit19(e,t={}){return this.bitN(19,e,t)}bit20(e,t={}){return this.bitN(20,e,t)}bit21(e,t={}){return this.bitN(21,e,t)}bit22(e,t={}){return this.bitN(22,e,t)}bit23(e,t={}){return this.bitN(23,e,t)}bit24(e,t={}){return this.bitN(24,e,t)}bit25(e,t={}){return this.bitN(25,e,t)}bit26(e,t={}){return this.bitN(26,e,t)}bit27(e,t={}){return this.bitN(27,e,t)}bit28(e,t={}){return this.bitN(28,e,t)}bit29(e,t={}){return this.bitN(29,e,t)}bit30(e,t={}){return this.bitN(30,e,t)}bit31(e,t={}){return this.bitN(31,e,t)}bit32(e,t={}){return this.bitN(32,e,t)}namely(e){return d.set(e,this),this.alias=e,this}skip(e,t={}){return this.seek(e,t)}seek(e,t={}){if(t.assert)throw new Error("assert option on seek is not allowed.");return this.setNextParser("seek","",{length:e})}string(e,t){if(!t.zeroTerminated&&!t.length&&!t.greedy)throw new Error("One of length, zeroTerminated, or greedy must be defined for string.");if((t.zeroTerminated||t.length)&&t.greedy)throw new Error("greedy is mutually exclusive with length and zeroTerminated for string.");if(t.stripNull&&!(t.length||t.greedy))throw new Error("length or greedy must be defined if stripNull is enabled.");return t.encoding=t.encoding||"utf8",this.setNextParser("string",e,t)}buffer(e,t){if(!t.length&&!t.readUntil)throw new Error("length or readUntil must be defined for buffer.");return this.setNextParser("buffer",e,t)}wrapped(e,t){if(typeof t!="object"&&typeof e=="object"&&(t=e,e=""),!t||!t.wrapper||!t.type)throw new Error("Both wrapper and type must be defined for wrapped.");if(!t.length&&!t.readUntil)throw new Error("length or readUntil must be defined for wrapped.");return this.setNextParser("wrapper",e,t)}array(e,t){if(!t.readUntil&&!t.length&&!t.lengthInBytes)throw new Error("One of readUntil, length and lengthInBytes must be defined for array.");if(!t.type)throw new Error("type is required for array.");if(typeof t.type=="string"&&!d.has(t.type)&&!(t.type in l))throw new Error(`Array element type "${t.type}" is unkown.`);return this.setNextParser("array",e,t)}choice(e,t){if(typeof t!="object"&&typeof e=="object"&&(t=e,e=""),!t)throw new Error("tag and choices are are required for choice.");if(!t.tag)throw new Error("tag is requird for choice.");if(!t.choices)throw new Error("choices is required for choice.");for(const s in t.choices){const i=parseInt(s,10),r=t.choices[i];if(isNaN(i))throw new Error(`Choice key "${s}" is not a number.`);if(typeof r=="string"&&!d.has(r)&&!(r in l))throw new Error(`Choice type "${r}" is unkown.`)}return this.setNextParser("choice",e,t)}nest(e,t){if(typeof t!="object"&&typeof e=="object"&&(t=e,e=""),!t||!t.type)throw new Error("type is required for nest.");if(!(t.type instanceof b)&&!d.has(t.type))throw new Error("type must be a known parser name or a Parser object.");if(!(t.type instanceof b)&&!e)throw new Error("type must be a Parser object if the variable name is omitted.");return this.setNextParser("nest",e,t)}pointer(e,t){if(!t.offset)throw new Error("offset is required for pointer.");if(!t.type)throw new Error("type is required for pointer.");if(typeof t.type=="string"&&!(t.type in l)&&!d.has(t.type))throw new Error(`Pointer type "${t.type}" is unkown.`);return this.setNextParser("pointer",e,t)}saveOffset(e,t={}){return this.setNextParser("saveOffset",e,t)}endianness(e){switch(e.toLowerCase()){case"little":this.endian="le";break;case"big":this.endian="be";break;default:throw new Error('endianness must be one of "little" or "big"')}return this}endianess(e){return this.endianness(e)}useContextVars(e=!0){return this.useContextVariables=e,this}create(e){if(!(e instanceof Function))throw new Error("Constructor must be a Function object.");return this.constructorFn=e,this}getContext(e){const t=new v(e,this.useContextVariables);return t.pushCode("var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);"),this.alias?(this.addAliasedCode(t),t.pushCode(`return ${$+this.alias}(0).result;`)):this.addRawCode(t),t}getCode(){const e="imports";return this.getContext(e).code}addRawCode(e){e.pushCode("var offset = 0;"),e.pushCode(`var vars = ${this.constructorFn?"new constructorFn()":"{}"};`),e.pushCode("vars.$parent = null;"),e.pushCode("vars.$root = vars;"),this.generate(e),this.resolveReferences(e),e.pushCode("delete vars.$parent;"),e.pushCode("delete vars.$root;"),e.pushCode("return vars;")}addAliasedCode(e){return e.pushCode(`function ${$+this.alias}(offset, context) {`),e.pushCode(`var vars = ${this.constructorFn?"new constructorFn()":"{}"};`),e.pushCode("var ctx = Object.assign({$parent: null, $root: vars}, context || {});"),e.pushCode("vars = Object.assign(vars, ctx);"),this.generate(e),e.markResolved(this.alias),this.resolveReferences(e),e.pushCode("Object.keys(ctx).forEach(function (item) { delete vars[item]; });"),e.pushCode("return { offset: offset, result: vars };"),e.pushCode("}"),e}resolveReferences(e){const t=e.getUnresolvedReferences();e.markRequested(t),t.forEach(s=>{var i;(i=d.get(s))===null||i===void 0||i.addAliasedCode(e)})}compile(){const e="imports",t=this.getContext(e);this.compiled=new Function(e,"TextDecoder",`return function (buffer, constructorFn) { ${t.code} };`)(t.imports,TextDecoder)}sizeOf(){let e=NaN;if(Object.keys(l).indexOf(this.type)>=0)e=l[this.type];else if(this.type==="string"&&typeof this.options.length=="number")e=this.options.length;else if(this.type==="buffer"&&typeof this.options.length=="number")e=this.options.length;else if(this.type==="array"&&typeof this.options.length=="number"){let t=NaN;typeof this.options.type=="string"?t=l[this.options.type]:this.options.type instanceof b&&(t=this.options.type.sizeOf()),e=this.options.length*t}else this.type==="seek"?e=this.options.length:this.type==="nest"?e=this.options.type.sizeOf():this.type||(e=0);return this.next&&(e+=this.next.sizeOf()),e}parse(e){return this.compiled||this.compile(),this.compiled(e,this.constructorFn)}setNextParser(e,t,s){const i=new b;return i.type=e,i.varName=t,i.options=s,i.endian=this.endian,this.head?this.head.next=i:this.next=i,this.head=i,this}generate(e){if(this.type){switch(this.type){case"uint8":case"uint16le":case"uint16be":case"uint32le":case"uint32be":case"int8":case"int16le":case"int16be":case"int32le":case"int32be":case"int64be":case"int64le":case"uint64be":case"uint64le":case"floatle":case"floatbe":case"doublele":case"doublebe":this.primitiveGenerateN(this.type,e);break;case"bit":this.generateBit(e);break;case"string":this.generateString(e);break;case"buffer":this.generateBuffer(e);break;case"seek":this.generateSeek(e);break;case"nest":this.generateNest(e);break;case"array":this.generateArray(e);break;case"choice":this.generateChoice(e);break;case"pointer":this.generatePointer(e);break;case"saveOffset":this.generateSaveOffset(e);break;case"wrapper":this.generateWrapper(e);break}this.type!=="bit"&&this.generateAssert(e)}const t=e.generateVariable(this.varName);return this.options.formatter&&this.type!=="bit"&&this.generateFormatter(e,t,this.options.formatter),this.generateNext(e)}generateAssert(e){if(!this.options.assert)return;const t=e.generateVariable(this.varName);switch(typeof this.options.assert){case"function":{const s=e.addImport(this.options.assert);e.pushCode(`if (!${s}.call(vars, ${t})) {`)}break;case"number":e.pushCode(`if (${this.options.assert} !== ${t}) {`);break;case"string":e.pushCode(`if (${JSON.stringify(this.options.assert)} !== ${t}) {`);break;default:throw new Error("assert option must be a string, number or a function.")}e.generateError(`"Assertion error: ${t} is " + ${JSON.stringify(this.options.assert.toString())}`),e.pushCode("}")}generateNext(e){return this.next&&(e=this.next.generate(e)),e}generateBit(e){const t=JSON.parse(JSON.stringify(this));if(t.options=this.options,t.generateAssert=this.generateAssert.bind(this),t.generateFormatter=this.generateFormatter.bind(this),t.varName=e.generateVariable(t.varName),e.bitFields.push(t),!this.next||this.next&&["bit","nest"].indexOf(this.next.type)<0){const s=e.generateTmpVariable();e.pushCode(`var ${s} = 0;`);const i=(n=0)=>{let u=0;for(let p=n;p<e.bitFields.length;p++){const g=e.bitFields[p].options.length;if(u+g>32)break;u+=g}return u},r=n=>(n<=8?(e.pushCode(`${s} = dataView.getUint8(offset);`),n=8):n<=16?(e.pushCode(`${s} = dataView.getUint16(offset);`),n=16):n<=24?(e.pushCode(`${s} = (dataView.getUint16(offset) << 8) | dataView.getUint8(offset + 2);`),n=24):(e.pushCode(`${s} = dataView.getUint32(offset);`),n=32),e.pushCode(`offset += ${n/8};`),n);let o=0;const a=this.endian==="be";let h=0,f=0;e.bitFields.forEach((n,u)=>{let p=n.options.length;if(p>f){if(f){const N=-1>>>32-f;e.pushCode(`${n.varName} = (${s} & 0x${N.toString(16)}) << ${p-f};`),p-=f}o=0,f=h=r(i(u)-f)}const g=a?h-o-p:o,y=-1>>>32-p;e.pushCode(`${n.varName} ${p<n.options.length?"|=":"="} ${s} >> ${g} & 0x${y.toString(16)};`),n.options.length===32&&e.pushCode(`${n.varName} >>>= 0`),n.options.assert&&n.generateAssert(e),n.options.formatter&&n.generateFormatter(e,n.varName,n.options.formatter),o+=p,f-=p}),e.bitFields=[]}}generateSeek(e){const t=e.generateOption(this.options.length);e.pushCode(`offset += ${t};`)}generateString(e){const t=e.generateVariable(this.varName),s=e.generateTmpVariable(),i=this.options.encoding,r=i.toLowerCase()==="hex",o='b => b.toString(16).padStart(2, "0")';if(this.options.length&&this.options.zeroTerminated){const a=this.options.length;e.pushCode(`var ${s} = offset;`),e.pushCode(`while(dataView.getUint8(offset++) !== 0 && offset - ${s} < ${a});`);const h=`offset - ${s} < ${a} ? offset - 1 : offset`;e.pushCode(r?`${t} = Array.from(buffer.subarray(${s}, ${h}), ${o}).join('');`:`${t} = new TextDecoder('${i}').decode(buffer.subarray(${s}, ${h}));`)}else if(this.options.length){const a=e.generateOption(this.options.length);e.pushCode(r?`${t} = Array.from(buffer.subarray(offset, offset + ${a}), ${o}).join('');`:`${t} = new TextDecoder('${i}').decode(buffer.subarray(offset, offset + ${a}));`),e.pushCode(`offset += ${a};`)}else this.options.zeroTerminated?(e.pushCode(`var ${s} = offset;`),e.pushCode("while(dataView.getUint8(offset++) !== 0);"),e.pushCode(r?`${t} = Array.from(buffer.subarray(${s}, offset - 1), ${o}).join('');`:`${t} = new TextDecoder('${i}').decode(buffer.subarray(${s}, offset - 1));`)):this.options.greedy&&(e.pushCode(`var ${s} = offset;`),e.pushCode("while(buffer.length > offset++);"),e.pushCode(r?`${t} = Array.from(buffer.subarray(${s}, offset), ${o}).join('');`:`${t} = new TextDecoder('${i}').decode(buffer.subarray(${s}, offset));`));this.options.stripNull&&e.pushCode(`${t} = ${t}.replace(/\\x00+$/g, '')`)}generateBuffer(e){const t=e.generateVariable(this.varName);if(typeof this.options.readUntil=="function"){const s=this.options.readUntil,i=e.generateTmpVariable(),r=e.generateTmpVariable();e.pushCode(`var ${i} = offset;`),e.pushCode(`var ${r} = 0;`),e.pushCode("while (offset < buffer.length) {"),e.pushCode(`${r} = dataView.getUint8(offset);`);const o=e.addImport(s);e.pushCode(`if (${o}.call(${e.generateVariable()}, ${r}, buffer.subarray(offset))) break;`),e.pushCode("offset += 1;"),e.pushCode("}"),e.pushCode(`${t} = buffer.subarray(${i}, offset);`)}else if(this.options.readUntil==="eof")e.pushCode(`${t} = buffer.subarray(offset);`);else{const s=e.generateOption(this.options.length);e.pushCode(`${t} = buffer.subarray(offset, offset + ${s});`),e.pushCode(`offset += ${s};`)}this.options.clone&&e.pushCode(`${t} = buffer.constructor.from(${t});`)}generateArray(e){const t=e.generateOption(this.options.length),s=e.generateOption(this.options.lengthInBytes),i=this.options.type,r=e.generateTmpVariable(),o=e.generateVariable(this.varName),a=e.generateTmpVariable(),h=this.options.key,f=typeof h=="string";if(f?e.pushCode(`${o} = {};`):e.pushCode(`${o} = [];`),typeof this.options.readUntil=="function"?e.pushCode("do {"):this.options.readUntil==="eof"?e.pushCode(`for (var ${r} = 0; offset < buffer.length; ${r}++) {`):s!==void 0?e.pushCode(`for (var ${r} = offset + ${s}; offset < ${r}; ) {`):e.pushCode(`for (var ${r} = ${t}; ${r} > 0; ${r}--) {`),typeof i=="string")if(d.get(i)){const n=e.generateTmpVariable();if(e.pushCode(`var ${n} = ${$+i}(offset, {`),e.useContextVariables){const u=e.generateVariable();e.pushCode(`$parent: ${u},`),e.pushCode(`$root: ${u}.$root,`),!this.options.readUntil&&s===void 0&&e.pushCode(`$index: ${t} - ${r},`)}e.pushCode("});"),e.pushCode(`var ${a} = ${n}.result; offset = ${n}.offset;`),i!==this.alias&&e.addReference(i)}else{const n=C[i],u=m[i];e.pushCode(`var ${a} = dataView.get${n}(offset, ${u});`),e.pushCode(`offset += ${l[i]};`)}else if(i instanceof b){e.pushCode(`var ${a} = {};`);const n=e.generateVariable();e.pushScope(a),e.useContextVariables&&(e.pushCode(`${a}.$parent = ${n};`),e.pushCode(`${a}.$root = ${n}.$root;`),!this.options.readUntil&&s===void 0&&e.pushCode(`${a}.$index = ${t} - ${r};`)),i.generate(e),e.useContextVariables&&(e.pushCode(`delete ${a}.$parent;`),e.pushCode(`delete ${a}.$root;`),e.pushCode(`delete ${a}.$index;`)),e.popScope()}if(f?e.pushCode(`${o}[${a}.${h}] = ${a};`):e.pushCode(`${o}.push(${a});`),e.pushCode("}"),typeof this.options.readUntil=="function"){const n=this.options.readUntil,u=e.addImport(n);e.pushCode(`while (!${u}.call(${e.generateVariable()}, ${a}, buffer.subarray(offset)));`)}}generateChoiceCase(e,t,s){if(typeof s=="string"){const i=e.generateVariable(this.varName);if(d.has(s)){const r=e.generateTmpVariable();e.pushCode(`var ${r} = ${$+s}(offset, {`),e.useContextVariables&&(e.pushCode(`$parent: ${i}.$parent,`),e.pushCode(`$root: ${i}.$root,`)),e.pushCode("});"),e.pushCode(`${i} = ${r}.result; offset = ${r}.offset;`),s!==this.alias&&e.addReference(s)}else{const r=C[s],o=m[s];e.pushCode(`${i} = dataView.get${r}(offset, ${o});`),e.pushCode(`offset += ${l[s]}`)}}else s instanceof b&&(e.pushPath(t),s.generate(e),e.popPath(t))}generateChoice(e){const t=e.generateOption(this.options.tag),s=e.generateVariable(this.varName);if(this.varName&&(e.pushCode(`${s} = {};`),e.useContextVariables)){const i=e.generateVariable();e.pushCode(`${s}.$parent = ${i};`),e.pushCode(`${s}.$root = ${i}.$root;`)}e.pushCode(`switch(${t}) {`);for(const i in this.options.choices){const r=parseInt(i,10),o=this.options.choices[r];e.pushCode(`case ${r}:`),this.generateChoiceCase(e,this.varName,o),e.pushCode("break;")}e.pushCode("default:"),this.options.defaultChoice?this.generateChoiceCase(e,this.varName,this.options.defaultChoice):e.generateError(`"Met undefined tag value " + ${t} + " at choice"`),e.pushCode("}"),this.varName&&e.useContextVariables&&(e.pushCode(`delete ${s}.$parent;`),e.pushCode(`delete ${s}.$root;`))}generateNest(e){const t=e.generateVariable(this.varName);if(this.options.type instanceof b){if(this.varName&&(e.pushCode(`${t} = {};`),e.useContextVariables)){const s=e.generateVariable();e.pushCode(`${t}.$parent = ${s};`),e.pushCode(`${t}.$root = ${s}.$root;`)}e.pushPath(this.varName),this.options.type.generate(e),e.popPath(this.varName),this.varName&&e.useContextVariables&&e.useContextVariables&&(e.pushCode(`delete ${t}.$parent;`),e.pushCode(`delete ${t}.$root;`))}else if(d.has(this.options.type)){const s=e.generateTmpVariable();if(e.pushCode(`var ${s} = ${$+this.options.type}(offset, {`),e.useContextVariables){const i=e.generateVariable();e.pushCode(`$parent: ${i},`),e.pushCode(`$root: ${i}.$root,`)}e.pushCode("});"),e.pushCode(`${t} = ${s}.result; offset = ${s}.offset;`),this.options.type!==this.alias&&e.addReference(this.options.type)}}generateWrapper(e){const t=e.generateVariable(this.varName),s=e.generateTmpVariable();if(typeof this.options.readUntil=="function"){const h=this.options.readUntil,f=e.generateTmpVariable(),n=e.generateTmpVariable();e.pushCode(`var ${f} = offset;`),e.pushCode(`var ${n} = 0;`),e.pushCode("while (offset < buffer.length) {"),e.pushCode(`${n} = dataView.getUint8(offset);`);const u=e.addImport(h);e.pushCode(`if (${u}.call(${e.generateVariable()}, ${n}, buffer.subarray(offset))) break;`),e.pushCode("offset += 1;"),e.pushCode("}"),e.pushCode(`${s} = buffer.subarray(${f}, offset);`)}else if(this.options.readUntil==="eof")e.pushCode(`${s} = buffer.subarray(offset);`);else{const h=e.generateOption(this.options.length);e.pushCode(`${s} = buffer.subarray(offset, offset + ${h});`),e.pushCode(`offset += ${h};`)}this.options.clone&&e.pushCode(`${s} = buffer.constructor.from(${s});`);const i=e.generateTmpVariable(),r=e.generateTmpVariable(),o=e.generateTmpVariable(),a=e.addImport(this.options.wrapper);if(e.pushCode(`${s} = ${a}.call(this, ${s}).subarray(0);`),e.pushCode(`var ${i} = buffer;`),e.pushCode(`var ${r} = offset;`),e.pushCode(`var ${o} = dataView;`),e.pushCode(`buffer = ${s};`),e.pushCode("offset = 0;"),e.pushCode("dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);"),this.options.type instanceof b)this.varName&&e.pushCode(`${t} = {};`),e.pushPath(this.varName),this.options.type.generate(e),e.popPath(this.varName);else if(d.has(this.options.type)){const h=e.generateTmpVariable();e.pushCode(`var ${h} = ${$+this.options.type}(0);`),e.pushCode(`${t} = ${h}.result;`),this.options.type!==this.alias&&e.addReference(this.options.type)}e.pushCode(`buffer = ${i};`),e.pushCode(`dataView = ${o};`),e.pushCode(`offset = ${r};`)}generateFormatter(e,t,s){if(typeof s=="function"){const i=e.addImport(s);e.pushCode(`${t} = ${i}.call(${e.generateVariable()}, ${t});`)}}generatePointer(e){const t=this.options.type,s=e.generateOption(this.options.offset),i=e.generateTmpVariable(),r=e.generateVariable(this.varName);if(e.pushCode(`var ${i} = offset;`),e.pushCode(`offset = ${s};`),this.options.type instanceof b){if(e.pushCode(`${r} = {};`),e.useContextVariables){const o=e.generateVariable();e.pushCode(`${r}.$parent = ${o};`),e.pushCode(`${r}.$root = ${o}.$root;`)}e.pushPath(this.varName),this.options.type.generate(e),e.popPath(this.varName),e.useContextVariables&&(e.pushCode(`delete ${r}.$parent;`),e.pushCode(`delete ${r}.$root;`))}else if(d.has(this.options.type)){const o=e.generateTmpVariable();if(e.pushCode(`var ${o} = ${$+this.options.type}(offset, {`),e.useContextVariables){const a=e.generateVariable();e.pushCode(`$parent: ${a},`),e.pushCode(`$root: ${a}.$root,`)}e.pushCode("});"),e.pushCode(`${r} = ${o}.result; offset = ${o}.offset;`),this.options.type!==this.alias&&e.addReference(this.options.type)}else if(Object.keys(l).indexOf(this.options.type)>=0){const o=C[t],a=m[t];e.pushCode(`${r} = dataView.get${o}(offset, ${a});`),e.pushCode(`offset += ${l[t]};`)}e.pushCode(`offset = ${i};`)}generateSaveOffset(e){const t=e.generateVariable(this.varName);e.pushCode(`${t} = offset`)}}export{b as P};
